<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.triponezidoapi.mappers.MemberMapper">
  <insert id="follow" parameterType="com.example.triponezidoapi.dto.request.RequestFollow">
    INSERT INTO follow
      (
      follower,
      following
      )
    VALUE
      (
      #{follower},
      #{following}
      )
  </insert>

  <insert id="signUp" parameterType="com.example.triponezidoapi.dto.Member">
    INSERT INTO member
      (
      name,
      login_id,
      password,
      question,
      answer,
      email,
      phone_number,
      address,
      birth,
      gender
      )
    VALUE
      (
      #{name},
      #{loginId},
      #{password},
      #{question},
      #{answer},
      #{email},
      #{phoneNumber},
      #{address},
      #{birth},
      #{gender}
      )
  </insert>

  <select id="isFollow" parameterType="com.example.triponezidoapi.dto.request.RequestFollow" resultType="boolean">
    SELECT CASE
        WHEN COUNT(*) > 0 THEN TRUE
        ELSE FALSE
        END AS result
    FROM
      follow
    WHERE
      follower = #{follower} AND following = #{following}
  </select>

  <select id="followerCount" parameterType="Long" resultType="int">
    SELECT
      COUNT(*)
    FROM
      follow
    WHERE
      following = #{id}
  </select>

  <select id="followingCount" parameterType="Long" resultType="int">
    SELECT
      COUNT(*)
    FROM
      follow
    WHERE
      follower = #{id}
  </select>


  <select id="followerList" parameterType="com.example.triponezidoapi.dto.request.RequestSessionTarget" resultType="com.example.triponezidoapi.dto.response.ResponseMember">
    SELECT
      id,
      login_id,
      profile
    FROM
      member
    WHERE
      id IN
      (
      SELECT
        follower
      FROM
        follow
      WHERE
        following = #{myMemberId}
      )
  </select>

  <select id="followingList" parameterType="com.example.triponezidoapi.dto.request.RequestSessionTarget" resultType="com.example.triponezidoapi.dto.response.ResponseMember">
    SELECT
      id,
      login_id,
      profile
    FROM
      member
    WHERE
      id IN
      (
      SELECT
        following
      FROM
        follow
      WHERE
        follower = #{myMemberId}
      )
  </select>

  <select id="postCount" parameterType="Long" resultType="int">
    SELECT
      COUNT(*)
    FROM
      owner
    where
      member_id = #{id}
  </select>

  <select id="getIdByLoginId" parameterType="string" resultType="long">
    SELECT
      id
    FROM
      member
    WHERE
      login_id = #{loginId}
  </select>

  <select id="getId" parameterType="com.example.triponezidoapi.dto.request.RequestFind" resultType="long">
    SELECT
      id
    FROM
      member
    WHERE
      login_id = #{loginId} AND
      name = #{name} AND
      email = #{email}
  </select>

  <select id="getLogin" parameterType="com.example.triponezidoapi.dto.Login" resultType="com.example.triponezidoapi.dto.response.ResponseMember">
    SELECT
      id,
      login_id,
      profile
    FROM
      member
    WHERE
      login_id = #{loginId} AND
      password = #{password}
  </select>

  <select id="getLoginId" parameterType="Long" resultType="String">
    SELECT
      login_id
    FROM
      member
    WHERE
      id = #{id}
  </select>

  <select id="getLoginFormByLoginId" parameterType="string" resultType="com.example.triponezidoapi.dto.Login">
    SELECT
      login_id,
      password
    FROM
      member
    WHERE
      login_id = #{loginId}
  </select>

  <select id="getLoginIdByFind" parameterType="com.example.triponezidoapi.dto.request.RequestFindId" resultType="String">
    SELECT
      login_id
    FROM
      member
    WHERE
      name = #{name} AND
      email = #{email}
  </select>

  <select id="getMemberById" parameterType="Long" resultType="com.example.triponezidoapi.dto.Member">
    SELECT
      *
    FROM
      member
    WHERE
      id = #{id}
  </select>

  <select id="getSecurityAnswer" parameterType="Long" resultType="string">
    SELECT
      answer
    FROM
      member
    WHERE
      id = #{id}
  </select>

  <select id="getSecurityQuestion" parameterType="Long" resultType="string">
    SELECT
      q.question
    FROM
      member m,
      security_questions q
    WHERE
      m.question = q.id AND
      m.id = #{id}
  </select>

  <select id="getSecurityQuestionList" resultType="com.example.triponezidoapi.dto.response.ResponseQuestions">
    SELECT
      *
    FROM
      security_questions
  </select>

  <select id="getPasswordById" parameterType="Long" resultType="String">
    SELECT password
    FROM member
    WHERE id = #{id}
  </select>

  <select id="getMemberProfile" parameterType="Long" resultType="com.example.triponezidoapi.dto.response.ResponseMember">
    SELECT
      id,
      login_id,
      profile
    FROM
      member
    WHERE
      id = #{id}
  </select>

  <update id="updateMember" parameterType="com.example.triponezidoapi.dto.Member">
    UPDATE
      member
    SET
      name = #{name},
      question = #{question},
      answer = #{answer},
      email = #{email},
      phone_number = #{phoneNumber},
      address = #{address},
      gender = #{gender}
    WHERE
      id = #{id}
  </update>

  <update id="updatePassword" parameterType="com.example.triponezidoapi.dto.request.RequestPassword">
    UPDATE
      member
    SET
      password = #{password}
    WHERE
      id = #{id}
  </update>

  <update id="updateProfile" parameterType="com.example.triponezidoapi.dto.request.RequestPhoto">
    UPDATE
      member
    SET
      profile = #{photo}
    WHERE
      id = #{contentId}
  </update>

  <update id="updateNaverId" parameterType="com.example.triponezidoapi.dto.request.RequestSocialConnect">
    UPDATE
      member
    SET
      naver_pairing = 1,
      naver_id = #{SocialId}
    WHERE
      login_id = #{loginId}
  </update>

  <update id="updateKakaoId" parameterType="com.example.triponezidoapi.dto.request.RequestSocialConnect">
    UPDATE
      member
    SET
      kakao_pairing = 1,
      kakao_id = #{SocialId}
    WHERE
      login_id = #{loginId}
  </update>

  <delete id="deleteMember" parameterType="long">
    DELETE FROM
      member
    SET
    password = #{password}
    WHERE
      id = #{id}
  </delete>

  <delete id="unFollow" parameterType="com.example.triponezidoapi.dto.request.RequestFollow">
    DELETE FROM
      follow
    WHERE
      follower = #{follower} AND
      following = #{following}
  </delete>
</mapper>