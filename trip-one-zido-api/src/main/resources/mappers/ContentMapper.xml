<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.triponezidoapi.content.ContentMapper">
    <insert id="addContent"
            parameterType="com.example.triponezidoapi.dto.request.RequestContent">
        INSERT INTO content
            (
                type,
                visibility,
                title
            )
        VALUE
            (
                #{type},
                #{visibility},
                #{title}
            )
        <selectKey keyProperty="id" resultType="long">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <insert id="addGood"
            parameterType="com.example.triponezidoapi.dto.request.RequestGood">
        INSERT INTO good
            (
                good,
                member_id,
                content_id
            )
        VALUE
            (
                #{good},
                #{memberId},
                #{contentId}
            )
    </insert>

    <insert id="addOwner"
            parameterType="com.example.triponezidoapi.dto.request.RequestOwner">
        INSERT INTO owner
            (
                own,
                member_id,
                content_id
            )
        VALUE
            (
                #{own},
                #{memberId},
                #{contentId}
            )
    </insert>

    <insert id="addRecentView"
            parameterType="com.example.triponezidoapi.dto.request.RequestSessionTarget">
        INSERT INTO open_content
            (
                member_id,
                content_id
            )
        VALUE
            (
                #{myMemberId},
                #{targetId}
            )
    </insert>

    <select id="getOwner"
            parameterType="Long"
            resultType="com.example.triponezidoapi.dto.response.ResponseMember">
        SELECT
            m.id,
            m.login_id,
            m.profile,
            o.own
        FROM
            member m,
            owner o
        WHERE
            m.id = o.member_id AND
            o.content_id = #{id}
    </select>

    <select id="getWriter"
            parameterType="Long"
            resultType="com.example.triponezidoapi.dto.response.ResponseMember">
        SELECT
            m.id,
            m.login_id,
            m.profile,
            o.own
        FROM
            member m,
            owner o
        WHERE
            m.id = o.member_id AND
            o.content_id = #{id} AND
            o.own = 'writer'
    </select>

    <select id="getWith"
            parameterType="Long"
            resultType="com.example.triponezidoapi.dto.response.ResponseMember">
        SELECT
            m.id,
            m.login_id,
            m.profile,
            o.own
        FROM
            member m,
            owner o
        WHERE
            m.id = o.member_id AND
            o.own = 'with' AND
            o.content_id = #{id}
    </select>

    <select id="getRecentView"
            parameterType="com.example.triponezidoapi.dto.request.RequestSessionTarget"
            resultType="com.example.triponezidoapi.dto.response.ResponseContentList">
        SELECT
            c.id,
            c.title,
            sp.grade,
            (
                SELECT
                    login_id
                FROM
                    member
                WHERE
                    id = #{myMemberId}
            ) login_id,
            (
                SELECT
                    photo
                FROM
                    photo
                WHERE
                    content_id = c.id AND
                    (
                        profile_id is null OR
                        profile_id = photo.id
                    )
            ) photo,
            (
                SELECT
                    COUNT(*)
                FROM
                    bookmark
                WHERE
                    content_id = c.id
            ) bookmark_count,
            (
                SELECT
                    COUNT(*)
                FROM
                    bookmark
                WHERE
                    content_id = c.id AND
                    member_id = #{myMemberId}
            ) my_bookmark,
            (
                SELECT
                    COUNT(*)
                FROM
                    good
                WHERE
                    content_id = c.id
            ) good_count,
            c.type
        FROM
            content c,
            (
                SELECT
                    id,
                    grade,
                    profile_id
                FROM spot
                UNION
                SELECT
                    id,
                    grade,
                    null
                FROM plan
                UNION
                SELECT
                    id,
                    0 COMN,
                    null
                FROM tour
            ) sp,
            open_content o
        WHERE
            c.id = sp.id and
            o.content_id = c.id and
            o.member_id = #{myMemberId} AND
            (
                visibility = 1 OR
                c.id IN
                (
                    SELECT
                        content_id
                    FROM
                        owner
                    WHERE
                        member_id = #{myMemberId}
                )
            )
        ORDER BY
            opened_at DESC
        LIMIT
            #{page}, 6
    </select>

    <select id="isGood"
            parameterType="com.example.triponezidoapi.dto.request.RequestGood"
            resultType="int">
        SELECT
            COUNT(*)
        FROM
            good
        WHERE
            content_id = #{contentId} AND
            member_id = #{memberId}
    </select>

    <select id="getRecentViewCount"
            parameterType="com.example.triponezidoapi.dto.request.RequestSessionTarget"
            resultType="int">
        SELECT
            count(*)
        FROM
            content c,
            open_content o
        WHERE
            o.content_id = c.id and
            o.member_id = #{memberId} and
            (
                visibility = 1 OR
                c.id IN
                (
                    SELECT
                        content_id
                    FROM
                        owner
                    WHERE
                        member_id = #{myMemberId}
                )
            )
    </select>

    <select id="myGood"
            parameterType="com.example.triponezidoapi.dto.request.RequestGood"
            resultType="boolean">
        SELECT
            good
        FROM
            good
        WHERE
            content_id = #{contentId} AND
            member_id = #{memberId}
    </select>

    <select id="isMine"
            parameterType="com.example.triponezidoapi.dto.request.RequestContentMember"
            resultType="boolean">
        SELECT
            CASE
                WHEN
                    COUNT(*) > 0
                THEN
                    TRUE
                ELSE
                    FALSE
            END AS result
        FROM
            owner
        WHERE
            content_id = #{contentId} AND
            member_id = #{memberId}
    </select>

    <select id="getAddress"
            parameterType="long"
            resultType="string">
        SELECT
            address
        FROM
            tour
        WHERE
            id = #{id}
        UNION
        SELECT
            address
        FROM
            spot
        WHERE
            id = #{id}
    </select>

    <update id="updateContent"
            parameterType="com.example.triponezidoapi.dto.request.RequestContent">
        UPDATE
            content
        SET
            visibility = #{visibility},
            title = #{title}
        WHERE
            id = #{id}
    </update>

    <update id="updateVisibility"
            parameterType="com.example.triponezidoapi.dto.request.RequestVisibility">
        UPDATE
            content
        SET
            visibility = #{visibility}
        WHERE
            id = #{id}
    </update>

    <update id="updateTitle"
            parameterType="com.example.triponezidoapi.dto.request.RequestTitle">
        UPDATE
            content
        SET
            title = #{title}
        WHERE
            id = #{id}
    </update>

    <update id="updateGood"
            parameterType="com.example.triponezidoapi.dto.request.RequestGood">
        UPDATE
            good
        SET
            good = #{good}
        WHERE
            member_id = #{memberId} AND
            content_id = #{contentId}
    </update>

    <delete id="deleteContent"
            parameterType="Long">
        DELETE FROM
            content
        WHERE
            id = #{id}
    </delete>

    <delete id="deleteGood"
            parameterType="com.example.triponezidoapi.dto.request.RequestContentMember">
        DELETE FROM
            good
        WHERE
            content_id = #{contentId} AND
            member_id = #{memberId}
    </delete>

    <delete id="deleteOwner"
            parameterType="com.example.triponezidoapi.dto.request.RequestContentMember">
        DELETE FROM
            owner
        WHERE
            member_id = #{memberId} AND
            content_id = #{contentId}
    </delete>

    <delete id="deletePlanSpotOwner"
            parameterType="Long">
        DELETE FROM
            owner
        WHERE
            content_id = #{contentId} AND own != 'writer'
    </delete>

    <delete id="changeRecentView"
            parameterType="com.example.triponezidoapi.dto.request.RequestSessionTarget">
        DELETE FROM
            open_content
        WHERE
            member_id = #{myMemberId} AND
            content_id = #{targetId}
    </delete>
</mapper>
